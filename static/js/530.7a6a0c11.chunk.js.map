{"version":3,"file":"static/js/530.7a6a0c11.chunk.js","mappings":"kJACA,QAA+B,4BAA/B,EAAyE,2BAAzE,EAAmH,4BAAnH,EAAiK,+BAAjK,EAAgN,6B,aCGhN,MAUaA,EAAaC,IACvB,MAAM,SACHC,EACAC,WAAW,OAAEC,EAAM,QAAEC,GAAS,aAC9BC,EAAY,SACZC,EAAQ,MACRC,IACCC,EAAAA,EAAAA,IAAQ,CACTC,KAAM,aAmBT,OACGC,EAAAA,EAAAA,MAAA,QAAMC,SAAUN,GAjBCO,UAAiB,IAADC,EAAAC,EACjC,MAAMC,QAAiBf,EAAMgB,QAAQC,GAEF,KAAvB,OAARF,QAAQ,IAARA,GAAc,QAANF,EAARE,EAAUE,YAAI,IAAAJ,OAAN,EAARA,EAAgBK,YAKe,MAAvB,OAARH,QAAQ,IAARA,GAAc,QAAND,EAARC,EAAUE,YAAI,IAAAH,OAAN,EAARA,EAAgBI,YAKpBX,IAJGD,EAAS,OAAQ,CAAEa,KAAM,SAAUC,QAAS,uCAL5Cd,EAAS,OAAQ,CAAEa,KAAM,SAAUC,QAAS,uCAaJC,UAAWC,EAAmBC,SAAA,EACtEC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,cAAaE,SACxBpB,EAAOsB,OAAQD,EAAAA,EAAAA,KAAA,KAAAD,SAAIpB,EAAOsB,MAAML,UAAe,MAGnDI,EAAAA,EAAAA,KAAA,OAAKH,UAAS,GAAAK,OAAKJ,EAAmB,KAAAI,OAAIvB,EAAOsB,MAAQ,cAAgB,IAAKF,UAC3EC,EAAAA,EAAAA,KAAA,SAAAG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACO1B,EAAS,QACV,CACG2B,SAAU,oBACVC,UAAW,CACRC,MAAO,GACPV,QAAS,yBAEb,IACLW,YAAY,cAGlBP,EAAAA,EAAAA,KAAA,OAAKH,UAAU,cAAaE,SACxBpB,EAAO6B,WAAYR,EAAAA,EAAAA,KAAA,KAAAD,SAAIpB,EAAO6B,SAASZ,aAG3CI,EAAAA,EAAAA,KAAA,OAAKH,UAAS,GAAAK,OAAKJ,EAAmB,KAAAI,OAAIvB,EAAO6B,SAAW,cAAgB,IAAKT,UAC9EC,EAAAA,EAAAA,KAAA,SAAAG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAW1B,EAAS,WACjB,CACG2B,SAAU,uBACVK,UAAW,CACRH,MAAO,EACPV,QAAS,wBAGjB,IAAED,KAAK,WAAWY,YAAY,iBAIlCP,EAAAA,EAAAA,KAAA,OAAKH,UAAU,cAAaE,SAAEpB,EAAO+B,OAAQV,EAAAA,EAAAA,KAAA,KAAAD,SAAIpB,EAAO+B,KAAKd,aAG7DV,EAAAA,EAAAA,MAAA,OAAKW,UAAWC,EAAuBC,SAAA,EACpCC,EAAAA,EAAAA,KAAA,SAAAG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAW1B,EAAS,eAAa,IAAEkB,KAAK,eACxCK,EAAAA,EAAAA,KAAA,KAAAD,SAAG,oBAGNC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAqBC,UAClCC,EAAAA,EAAAA,KAAA,UAAQW,UAAW/B,EAAQmB,SAAC,iBAQxC,EA1FevB,IAETU,EAAAA,EAAAA,MAAA,OAAAa,SAAA,EACGC,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAoBC,SAAC,WACnCC,EAAAA,EAAAA,KAACzB,GAAS4B,EAAAA,EAAAA,GAAA,GAAK3B,O,oBCJxB,MAYA,EAZuBoC,KACpB,MAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACGd,EAAAA,EAAAA,KAACe,EAAK,CAACvB,QALKC,GACLoB,GAASG,EAAAA,EAAAA,IAAevB,M","sources":["webpack://my-app/./src/components/Login/Login.module.css?3530","components/Login/Login.jsx","components/Login/LoginContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"login__title\":\"Login_login__title__OlArf\",\"login__form\":\"Login_login__form__0KqHo\",\"login__input\":\"Login_login__input__EqiVp\",\"login__checkbox\":\"Login_login__checkbox__SZ5yz\",\"login__button\":\"Login_login__button__qKDs6\"};","import { useForm } from \"react-hook-form\";\r\nimport styles from \"./Login.module.css\"\r\n\r\n\r\nconst Login = (props) => {\r\n   return (\r\n      <div>\r\n         <p className={styles.login__title}>Login</p>\r\n         <LoginForm {...props} />\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\nexport const LoginForm = (props) => {\r\n   const {\r\n      register,\r\n      formState: { errors, isValid },\r\n      handleSubmit,\r\n      setError,\r\n      reset,\r\n   } = useForm({\r\n      mode: \"onChange\"\r\n   });\r\n\r\n   const handleLogin = async (data) => {\r\n      const response = await props.onLogin(data)\r\n\r\n      if (response?.data?.resultCode === 1) {\r\n         setError(\"root\", { type: \"server\", message: \"Email or password are incorrect\" })\r\n         return\r\n      }\r\n\r\n      if (response?.data?.resultCode === 10) {\r\n         setError(\"root\", { type: \"server\", message: \"Too many attempts. Try again later\" })\r\n         return\r\n      }\r\n\r\n      reset();\r\n   };\r\n\r\n   return (\r\n      <form onSubmit={handleSubmit(handleLogin)} className={styles.login__form}>\r\n         <div className=\"form__error\">\r\n            {errors.Email ? <p>{errors.Email.message}</p> : \"\"}\r\n         </div>\r\n\r\n         <div className={`${styles.login__input} ${errors.Email ? \"form__error\" : \"\"}`}>\r\n            <input\r\n               {...register(\"Email\",\r\n                  {\r\n                     required: \"Email is required\",\r\n                     maxLength: {\r\n                        value: 30,\r\n                        message: \"30 symbols maximum\",\r\n                     },\r\n                  })}\r\n               placeholder='Email' />\r\n         </div>\r\n\r\n         <div className=\"form__error\">\r\n            {errors.Password && <p>{errors.Password.message}</p>}\r\n         </div>\r\n\r\n         <div className={`${styles.login__input} ${errors.Password ? \"form__error\" : \"\"}`}>\r\n            <input {...register(\"Password\",\r\n               {\r\n                  required: \"Password is required\",\r\n                  minLength: {\r\n                     value: 8,\r\n                     message: \"8 symbols minimum\"\r\n                  }\r\n               }\r\n            )} type=\"password\" placeholder=\"Password\" />\r\n\r\n         </div>\r\n\r\n         <div className=\"form__error\">{errors.root && <p>{errors.root.message}</p>}</div>\r\n\r\n\r\n         <div className={styles.login__checkbox}>\r\n            <input {...register(\"RememberMe\")} type=\"checkbox\" />\r\n            <p>Remember Me</p>\r\n         </div>\r\n\r\n         <div className={styles.login__button}>\r\n            <button disabled={!isValid}>Sumbit</button>\r\n         </div>\r\n\r\n\r\n      </form>\r\n   )\r\n}\r\n\r\nexport default Login","import Login from \"./Login\"\r\nimport { loginUserThunk } from \"../../redux/auth-reducer\"\r\nimport { useDispatch } from \"react-redux\"\r\n\r\nconst LoginContainer = () => {\r\n   const dispatch = useDispatch()\r\n\r\n   let onLogin = (data) => {\r\n      return dispatch(loginUserThunk(data))\r\n   }\r\n\r\n   return (\r\n      <Login onLogin={onLogin} />\r\n   )\r\n}\r\n\r\nexport default LoginContainer"],"names":["LoginForm","props","register","formState","errors","isValid","handleSubmit","setError","reset","useForm","mode","_jsxs","onSubmit","async","_response$data","_response$data2","response","onLogin","data","resultCode","type","message","className","styles","children","_jsx","Email","concat","_objectSpread","required","maxLength","value","placeholder","Password","minLength","root","disabled","LoginContainer","dispatch","useDispatch","Login","loginUserThunk"],"sourceRoot":""}