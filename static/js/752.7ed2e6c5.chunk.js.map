{"version":3,"file":"static/js/752.7ed2e6c5.chunk.js","mappings":"yIACA,QAA0B,yBAA1B,EAA6D,yBAA7D,EAA8F,uBAA9F,EAA4H,sBAA5H,EAAkM,8BAAlM,EAA2O,0BAA3O,EAA+Q,yBAA/Q,EAAsT,6B,8BCGtT,MAuCA,EAvCgBA,EAAAA,MAAYC,IAEzB,MAAM,SACHC,EACAC,WAAW,OAAEC,EAAM,QAAEC,GAAS,aAC9BC,EAAY,MACZC,IACCC,EAAAA,EAAAA,IAAQ,CAAEC,KAAM,aAEdC,GAAgBC,EAAAA,EAAAA,cAAaC,IAChCX,EAAMY,YAAYD,GAClBL,MACA,CAACN,EAAOM,IAEX,OACGO,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAUC,UACvBC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAUC,SAAA,EAEvBH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAQC,SACnBhB,EAAMkB,mBAGVD,EAAAA,EAAAA,MAAA,QAAME,SAAUd,EAAaI,GAAgBK,UAAWC,EAAWC,SAAA,CAC/DhB,EAAMoB,kBAEPP,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAcC,UAC3BH,EAAAA,EAAAA,KAAA,YAAAQ,EAAAA,EAAAA,GAAA,GAAcpB,EAAS,UAAW,CAAEqB,SAAU,6BAGjDT,EAAAA,EAAAA,KAAA,UAAQU,UAAWnB,EAAQY,SAAC,oB,6BC9BpC,MAAMQ,EAAUxB,IAEpB,IAAIyB,EAAO,YAAczB,EAAM0B,GAE/B,OACGb,EAAAA,EAAAA,KAACc,EAAAA,GAAO,CAACC,GAAIH,EAAKT,UACfC,EAAAA,EAAAA,MAAA,MAAIH,UAAWe,EAAYb,SAAA,EACxBH,EAAAA,EAAAA,KAAA,OAAKC,UAAWe,EAAoBb,UACjCH,EAAAA,EAAAA,KAAA,OAAKiB,IAAK9B,EAAM+B,OAAQC,IAAI,QAE/BnB,EAAAA,EAAAA,KAAA,KAAAG,SAAIhB,EAAMiC,aCXTC,EAAWlC,IAElBa,EAAAA,EAAAA,KAAA,OAAKC,UAAWe,EAAeb,SAC3BhB,EAAMmC,U,aCGhB,MAoBA,EApByBC,MAEtBC,EAAAA,EAAAA,KACA,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,YAAYC,cACjDC,GAAWJ,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,YAAYG,eAGxD,IAAI5B,EAAkBsB,EAAQO,KAAIC,IAAUnC,EAAAA,EAAAA,KAACW,EAAM,CAAiBS,KAAMe,EAAOf,KAAMF,OAAQiB,EAAOjB,QAA7CiB,EAAOtB,MAC5DN,EAAmByB,EAASE,KAAIZ,IAAWtB,EAAAA,EAAAA,KAACqB,EAAO,CAAkBC,QAASA,EAAQA,SAA7BA,EAAQT,MAMrE,OACGb,EAAAA,EAAAA,KAACoC,EAAO,CAACrC,YALOD,IAChB2B,GAASY,EAAAA,EAAAA,GAAyBvC,KAICO,gBAAiBA,EAAiBE,iBAAkBA,I,6DCpB7F,MAYA,EAZwBiB,KACrB,MAAMc,GAASV,EAAAA,EAAAA,KAAYC,GAASA,EAAMU,KAAKD,SACzCE,GAAOZ,EAAAA,EAAAA,KAAYC,GAASA,EAAMY,IAAID,OACtCE,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,KACHJ,IAASF,GACVI,EAAS,YAEZ,CAACF,EAAMF,EAAQI,I","sources":["webpack://my-app/./src/components/Dialogs/dialogs.module.css?1969","components/Dialogs/dialogs.jsx","components/Dialogs/dialog.jsx","components/Dialogs/message.jsx","components/Dialogs/dialogsContainer.jsx","hooks/useAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"dialogs_dialogs__0aBV0\",\"wrapper\":\"dialogs_wrapper__GCm2a\",\"users\":\"dialogs_users__5qdIk\",\"user\":\"dialogs_user__dIvqM\",\"active\":\"dialogs_active__i2C8P\",\"user__avatar\":\"dialogs_user__avatar__3naMP\",\"messages\":\"dialogs_messages__c2q1r\",\"message\":\"dialogs_message__Q9eH-\",\"my__message\":\"dialogs_my__message__AzphO\"};","import d from \"./dialogs.module.css\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport React, { useCallback } from \"react\";\r\n\r\nconst Dialogs = React.memo((props) => {\r\n\r\n   const {\r\n      register,\r\n      formState: { errors, isValid },\r\n      handleSubmit,\r\n      reset,\r\n   } = useForm({ mode: \"onChange\" })\r\n\r\n   const handleMessage = useCallback((data) => {\r\n      props.sendMessage(data)\r\n      reset();\r\n   }, [props, reset])\r\n\r\n   return (\r\n      <div className={d.dialogs}>\r\n         <div className={d.wrapper}>\r\n\r\n            <ul className={d.users}>\r\n               {props.DialogsElements}\r\n            </ul>\r\n\r\n            <form onSubmit={handleSubmit(handleMessage)} className={d.messages}>\r\n               {props.MessagesElements}\r\n\r\n               <div className={d.my__message}>\r\n                  <textarea {...register(\"message\", { required: \"Message is required\" })}></textarea>\r\n               </div>\r\n\r\n               <button disabled={!isValid}>Send</button>\r\n            </form>\r\n\r\n\r\n\r\n         </div>\r\n      </div>\r\n   )\r\n})\r\n\r\nexport default Dialogs","import styles from \"./dialogs.module.css\"\r\nimport { NavLink } from \"react-router\";\r\n\r\nexport const Dialog = (props) => {\r\n\r\n   let path = \"/dialogs/\" + props.id\r\n\r\n   return (\r\n      <NavLink to={path}>\r\n         <li className={styles.user}>\r\n            <div className={styles.user__avatar}>\r\n               <img src={props.avatar} alt=\"\" />\r\n            </div>\r\n            <p>{props.name}</p>\r\n         </li>\r\n      </NavLink>\r\n   )\r\n}\r\n\r\nexport default Dialog","import styles from \"./dialogs.module.css\"\r\n\r\nexport const Message = (props) => {\r\n   return (\r\n      <div className={styles.message}>\r\n         {props.message}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Message","import Dialogs from \"./dialogs\"\r\nimport { sendMessageActionCreator } from \"../../redux/dialogs-reducer\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Dialog } from \"./dialog\"\r\nimport { Message } from \"./message\"\r\nimport useAuthRedirect from \"../../hooks/useAuthRedirect\"\r\n\r\nconst DialogsContainer = () => {\r\n\r\n   useAuthRedirect()\r\n   const dispatch = useDispatch()\r\n   const dialogs = useSelector(state => state.DialogsPage.dialogsData)\r\n   const messages = useSelector(state => state.DialogsPage.messagesData)\r\n\r\n\r\n   let DialogsElements = dialogs.map(dialog => <Dialog key={dialog.id} name={dialog.name} avatar={dialog.avatar} />)\r\n   let MessagesElements = messages.map(message => <Message key={message.id} message={message.message} />)\r\n\r\n   let sendMessage = (data) => {\r\n      dispatch(sendMessageActionCreator(data))\r\n   }\r\n\r\n   return (\r\n      <Dialogs sendMessage={sendMessage} DialogsElements={DialogsElements} MessagesElements={MessagesElements} />\r\n   )\r\n}\r\n\r\nexport default DialogsContainer","import { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst useAuthRedirect = () => {\r\n   const isAuth = useSelector(state => state.Auth.isAuth);\r\n   const init = useSelector(state => state.App.init);\r\n   const navigate = useNavigate();\r\n\r\n   useEffect(() => {\r\n      if (init && !isAuth) {\r\n         navigate(\"/login\");\r\n      }\r\n   }, [init, isAuth, navigate])\r\n}\r\n\r\nexport default useAuthRedirect"],"names":["React","props","register","formState","errors","isValid","handleSubmit","reset","useForm","mode","handleMessage","useCallback","data","sendMessage","_jsx","className","d","children","_jsxs","DialogsElements","onSubmit","MessagesElements","_objectSpread","required","disabled","Dialog","path","id","NavLink","to","styles","src","avatar","alt","name","Message","message","DialogsContainer","useAuthRedirect","dispatch","useDispatch","dialogs","useSelector","state","DialogsPage","dialogsData","messages","messagesData","map","dialog","Dialogs","sendMessageActionCreator","isAuth","Auth","init","App","navigate","useNavigate","useEffect"],"sourceRoot":""}